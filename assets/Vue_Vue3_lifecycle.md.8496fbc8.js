import{o as e,c as o,d}from"./app.2840732f.js";const t='{"title":"lifecycle","description":"","frontmatter":{},"headers":[{"level":2,"title":"执行顺序","slug":"执行顺序"},{"level":2,"title":"总结","slug":"总结"}],"relativePath":"Vue/Vue3/lifecycle.md","lastUpdated":1633079974474}',c={},n=d('<h1 id="lifecycle"><a class="header-anchor" href="#lifecycle" aria-hidden="true">#</a> lifecycle</h1><h2 id="执行顺序"><a class="header-anchor" href="#执行顺序" aria-hidden="true">#</a> 执行顺序</h2><p>父组件<code>onBeforeMount</code> =&gt; 子组件<code>onBeforeMount</code> =&gt; 子组件<code>onMounted</code> =&gt; 父组件<code>onMounted</code></p><p>父组件<code>onBeforeUpdate</code> =&gt; 子组件<code>onBeforeUpdate</code> =&gt; 子组件<code>onUpdated</code> =&gt; 父组件<code>onUpdated</code></p><p>父组件<code>onBeforeUnmount</code> =&gt; 子组件<code>onBeforeUnmount</code> =&gt; 子组件<code>onUnmounted</code> =&gt; 父组件<code>onUnmounted</code></p><h2 id="总结"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>Before 全都是递归执行-从父到子，After 全都是一层一层结束调用栈往回走-从子到父</p>',7);c.render=function(d,t,c,a,r,l){return e(),o("div",null,[n])};export{t as __pageData,c as default};
