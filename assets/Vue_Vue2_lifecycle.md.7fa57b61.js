import{o as e,c as d,d as o}from"./app.2840732f.js";const t='{"title":"lifecycle","description":"","frontmatter":{},"headers":[{"level":2,"title":"执行顺序","slug":"执行顺序"},{"level":2,"title":"总结","slug":"总结"}],"relativePath":"Vue/Vue2/lifecycle.md","lastUpdated":1633079974474}',c={},r=o('<h1 id="lifecycle"><a class="header-anchor" href="#lifecycle" aria-hidden="true">#</a> lifecycle</h1><h2 id="执行顺序"><a class="header-anchor" href="#执行顺序" aria-hidden="true">#</a> 执行顺序</h2><p>父组件<code>beforeCreate</code> =&gt; 父组件<code>created</code> =&gt; 父组件<code>beforeMount</code> =&gt; 子组件<code>beforeCreate</code> =&gt; 子组件<code>created</code> =&gt; 子组件<code>beforeMount</code> =&gt; 子组件<code>mounted</code> =&gt; 父组件<code>mounted</code></p><p>父组件<code>beforeUpdate</code> =&gt; 子组件<code>beforeUpdate</code> =&gt; 子组件<code>updated</code> =&gt; 父组件<code>updated</code></p><p>父组件<code>beforeDestroy</code> =&gt; 子组件<code>beforeDestroy</code> =&gt; 子组件<code>destroyed</code> =&gt; 父组件<code>destroyed</code></p><h2 id="总结"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>Create、父组件永远在子组件前面创建完成 beforeCreate和created成对执行</p><p>其他钩子、Before 都是递归执行-从父到子，After 都是一层一层结束调用栈-从子到父</p>',8);c.render=function(o,t,c,a,l,f){return e(),d("div",null,[r])};export{t as __pageData,c as default};
